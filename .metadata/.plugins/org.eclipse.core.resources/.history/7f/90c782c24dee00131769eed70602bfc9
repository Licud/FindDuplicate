
/*Class that finds repeated values on an array (can be sorted/unsorted)
 * using a very simple hashing technique.
 * 
 * Author: Mikron Christopher Licud
 * Java 1.7
 */

public class FindRepeatsHash {
	
	// 30 values, assume to be a million
	private static final int[] array = {7, 2, 3, 4, 5, 6, 1, 8, 9, 11, 10, 12, 13, 14, 15,
				16, 17, 18, 19, 20, 21, 21, 22, 23, 24, 25, 26, 27, 28 ,29}; 

	/* Finds any duplicates in an array by using a simple hash method
	 * which hashes actual value to index.
	 * 
	 * @pre: No element is higher than the length of the array.
	 * @post: The duplicated number (if any) is returned.
	 */
	private static int findDuplicate(){
		int[] hashTable = new int[array.length];
		boolean found = false;
		int index = 0;
		int duplicate = 0;
		
		while(!found && index < array.length - 1){
			if(hashTable[array[index]] == 0){ // Not been hashed to yet.
				hashTable[array[index]] = 1;
				index++;
			}else{
				duplicate = array[index];
				found = true;
			}
		}
		
		return duplicate;
	}
	
	public static void main(String[] args) {
		int repeatedNumber = findDuplicate();
			
		if(repeatedNumber== 0){ // Guard condition in case no numbers are duplicated.
			System.out.println("There are no duplicated numbers");
		}else{
			System.out.println("The duplicated number is " + repeatedNumber);
		}

	}

}
